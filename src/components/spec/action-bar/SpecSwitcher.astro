---
import { getRelativeLocaleUrl } from "astro:i18n";
import { inferSpecVersionFromPath } from "@utils/path";
import * as Switcher from "./switcher";

const locale = String(Astro.currentLocale);
const currentSpec = inferSpecVersionFromPath(Astro.url.pathname);
const specs: Array<{ text: string; active: boolean; href: string }> = [];
const pages = import.meta.glob("../../../pages/**");

for (const fileUri of Object.keys(pages)) {
    const urlPath = fileUri.replace("../../../pages/", "");
    // Skipping the required `index.md` at the top level
    // to only handle localized paths
    if (urlPath === "index.md") {
        continue;
    }

    // Should only display specs that have been translated to the current locale
    if (!urlPath.startsWith(`${locale}/specs`)) {
        continue;
    }

    const specVersion = inferSpecVersionFromPath(urlPath);
    specs.push({
        text: specVersion,
        active: specVersion === currentSpec,
        href: getRelativeLocaleUrl(locale, `/specs/${specVersion}`),
    });
}
---

<Switcher.Root>
    <Switcher.Trigger>{currentSpec}</Switcher.Trigger>
    <Switcher.ItemsRoot>
        {
            specs.map((spec) => (
                <Switcher.Item as="a" href={spec.href}>
                    {spec.text}
                </Switcher.Item>
            ))
        }
    </Switcher.ItemsRoot>
</Switcher.Root>
